First requst:

 API -> GET /api/v1/Authors
 Description : Responce for successful HTTP request
 Test Case 1: response should be 200 OK
 Expected Result: 200 OK
 Actual Result: 200 OK
 Status: Pass 

 API -> GET /api/v1/Authors
 Description : check Objects inside response contain, id, idBook, firstName, lastName
 Test Case 2: check objects inside response Body
 Expected Result: {"id","idBook","firstName","lastName"}
 Actual Result: {"id","idBook","firstName","lastName"}
 Status: Pass

 API -> GET /api/v1/Authors
 Description : check response Headers contain "content-type"
 Test Case 3: check response headers
 Expected Result: TRUE
 Actual Result: TRUE
 Status: Pass

 API -> GET /api/v1/Authors
 Description : check response Headers "content-type" contain json data
 Test Case 5: check response headers contain json data
 Expected Result: "application/json; charset=utf-8; v=1.0"
 Actual Result: "json"
 Status: Pass

********************************************************************************************

Second Request:

 API -> POST /api/v1/Authors
 Description : Register a new valid Author successfully and response code 200 OK. debends on server of swagger
 Test Case 1: response code 200 ok
 Expected Result: 200 OK
 Actual Result: 200 OK
 Status: Pass

 API -> POST /api/v1/Authors
 Description : firstname & lastname should be mandatory at response body
 Test Case 2: response code 200 ok
 Expected Result: 200 OK
 Actual Result: 200 OK
 Status: Pass
 
 API -> POST /api/v1/Authors
 Description : firstname is missed in the request body (same for lastname)
 Test Case 2: response code 400 Bad Request
 Expected Result: 400 Bad Request
 Actual Result: 400 Bad Request
 Status: Pass

*********************************************************************************************

Third Request : 
 
 API ->GET /api/v1/Authors/authors/books/{idBook}
  
 Description : response body should contain idBook = 1 (same for idBook 2,3)
 Test Case 1: Searching with valid idBook
 Expected Result: 200 ok
 Actual Result: 200 ok
 Status: Pass 

*********************************************************************************************

Fourth request:

 API -> PUT /api/v1/Authors/{id}
 Description: Update (firstname, lastname)	   
 Test Case 1: Responce for successful HTTP request
 Expected Result: 200 ok
 Actual Result: 200 ok
 Status: Pass 
 
 API -> PUT /api/v1/Authors/{id}
 Description : confirm that Author's data in response is updated successfully.
 Test case 2: to confirm that Author's data in response is updated successfully
 Expected Result: new (firstname, lastname)
 Actual Result: new(firstname, lastname)
 Status: Pass

********************************************************************************************

fifth request:

 API -> GET /api/v1/Authors/{id}
 Description : to validate response status and code
 Test case 1: Responce for successful HTTP request 200 ok
 Expected Result: 200 ok
 Actual Result: 200 ok
 Status: Pass 
 
 API -> GET /api/v1/Authors/{id}
 Description : The purpose of this test case is to make sure that if a change occurred from one endpoint (PUT request),it will affect other endpoints as well (GET request)this is a kind of integration testing.
 Test case : Responce for successful HTTP request 200 ok
 Expected Result: new (firstname, lastname)
 Actual Result: OLD (firstname, lastname)
 Status: Fail

********************************************************************************************

sixth request:
 
 API -> DELETE /api​/v1​/Authors​/{id} 
 Description : Delete Author 
 Test Case 1: to validate response status and code
 Expected Result: 200 ok
 Actual Result: 200 ok
 Status: Pass 
 